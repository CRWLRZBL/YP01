Проблема с заполнением полей ввода в вашем коде возникает из-за того, что у вас есть несколько отдельных экземпляров Tk(), и функция mainloop() вызывается для каждого из них. Это не позволяет пользователю взаимодействовать с несколькими окнами одновременно. Вместо этого необходимо создать одно основное окно и вложить все остальные элементы в это окно. 

Вот исправленный код, в котором используются фреймы для организации каждой части приложения в одном окне, что позволяет избежать конфликта между окнами:

import tkinter as tk
from tkinter import filedialog

# Приложение с многострочным полем ввода и кнопкой Сохранить
def save_text():
    file_path = filedialog.asksaveasfilename(defaultextension=".txt",
                                               filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
    if file_path:
        with open(file_path, 'w') as file:
            file.write(text_area.get("1.0", tk.END))

def on_key_press(event):
    if event.keysym == 'Escape':
        text_input_frame.pack_forget()

# Приложение с тремя полями ввода
def on_click(event):
    if event.num == 1:  # левая кнопка мыши
        label.config(text=f"Активация: {event.widget.cget('text')}")
    elif event.num == 3:  # правая кнопка мыши
        print(f"Правый клик на: {event.widget.cget('text')}")

# Приложение с координатами мыши
def update_coordinates(event):
    coordinates_label.config(text=f"Координаты мыши: x={event.x}, y={event.y}")

# Приложение с нажатыми клавишами
def key_pressed(event):
    current_text = keys_label.cget("text")
    keys_label.config(text=current_text + event.char)

# Главное окно приложения
main_app = tk.Tk()
main_app.title("Объединенное приложение")

# Фрейм для многострочного поля ввода
text_input_frame = tk.Frame(main_app)
text_input_frame.pack(pady=10)

text_area = tk.Text(text_input_frame)
text_area.pack(expand=True, fill=tk.BOTH)

save_button = tk.Button(text_input_frame, text="Сохранить", command=save_text)
save_button.pack()

text_input_frame.bind('<Control-s>', lambda event: save_text())
text_input_frame.bind('<Escape>', on_key_press)

# Фрейм для трех полей ввода
entry_frame = tk.Frame(main_app)
entry_frame.pack(pady=10)

label = tk.Label(entry_frame, text="")
label.pack(pady=10)

entry1 = tk.Entry(entry_frame, name="Поле 1")
entry1.pack(pady=2)
entry2 = tk.Entry(entry_frame, name="Поле 2")
entry2.pack(pady=2)
entry3 = tk.Entry(entry_frame, name="Поле 3")
entry3.pack(pady=2)

entry_frame.bind_class("Entry", "<Button-1>", on_click)
entry_frame.bind_class("Entry", "<Button-3>", on_click)

# Фрейм для координат мыши
coordinates_frame = tk.Frame(main_app)
coordinates_frame.pack(pady=10)

coordinates_label = tk.Label(coordinates_frame, text="Координаты мыши")
coordinates_label.pack(pady=20)

main_app.bind("<Motion>", update_coordinates)

# Фрейм для нажатых клавиш
keys_frame = tk.Frame(main_app)
keys_frame.pack(pady=10)

keys_label = tk.Label(keys_frame, text="Нажатые клавиши: ")
keys_label.pack(pady=20)

main_app.bind("<Key>", key_pressed)

# Запуск основного приложения
main_app.mainloop()


Теперь все приложения объединены в одном окне, и вы можете работать с полями ввода. Заполнение полей должно работать без проблем, а также вы сможете использовать другие функции приложения.
